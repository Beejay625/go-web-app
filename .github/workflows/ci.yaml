# GitHub Actions workflow for Continuous Integration and Continuous Deployment (CI/CD)
name: cicd

# Trigger the workflow on push to main branch and pull requests to main and dev branches
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - 'go-web-app-chart/values.yaml'
  pull_request:
    branches:
      - main
      - dev 
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - 'go-web-app-chart/values.yaml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.56.2

  setup-env:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}  
      - name: Get Go version from Dockerfile
        id: get-go-version
        run: |
          # Extract Go version from Dockerfile to ensure consistency
          GO_VERSION=$(sed -n 's/FROM golang:\([0-9.]*\).*/\1/p' Dockerfile)
          echo "version=$GO_VERSION" >> $GITHUB_OUTPUT
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.get-go-version.outputs.version }}     

  build:
    runs-on: ubuntu-latest
    needs: setup-env
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}    
      # Step 3: Build the Go code
      - name: Build the code
        run: |
          # Attempt to build the Go code and provide appropriate feedback
          if go build -v ./...; then
            echo "Build successful"
          else
            echo "Build failed"
            exit 1
          fi

  push_code_to_docker_hub:
    runs-on: ubuntu-latest
    needs: setup-env
    steps:
      # Step 4: Build and push Docker image
      - name: Push Docker image to Docker Hub
        run: |
          # Log in to Docker Hub using secrets
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          # Build Docker image with a tag that includes branch name and commit SHA
          docker build -t ${{ secrets.DOCKER_USERNAME }}/go-web-app:${{ github.ref_name }}-${{ github.sha }} .
          # Push the newly built image to Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/go-web-app:${{ github.ref_name }}-${{ github.sha }}
  update-helm-values:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: update helm values
        run: |
          # Update the image tag in the Helm chart values file
          sed -i 's|tag:.*|tag: "${{ github.ref_name }}-${{ github.sha }}"|' go-web-app-chart/values.yaml
      - name: commit and push helm values
        run: |
          git config --global user.email "seyi.i@blkat.io"
          git config --global user.name "Beejay625"
          git add go-web-app-chart/values.yaml
          git commit -m "Update Helm chart values with new image tag"
          git push