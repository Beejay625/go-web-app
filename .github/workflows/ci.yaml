# GitHub Actions workflow for Continuous Integration and Continuous Deployment (CI/CD)
name: cicd

# Trigger the workflow on push to main branch and pull requests to main and dev branches
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  pull_request:
    branches:
      - main
      - dev 
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
         
          fetch-depth: 0 # Fetch all history for all branches and tags to ensure full repository context

      # Step 2: Set up Go environment
      - name: Get Go version from Dockerfile
        id: get-go-version
        run: |
          # Extract Go version from Dockerfile to ensure consistency
          GO_VERSION=$(sed -n 's/FROM golang:\([0-9.]*\).*/\1/p' Dockerfile)
          echo "version=$GO_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.get-go-version.outputs.version }}
          
      # Step 3: Build the Go code
      - name: Build the code
        run: |
          # Attempt to build the Go code and provide appropriate feedback
          if go build -v ./...; then
            echo "Build successful"
          else
            echo "Build failed"
            exit 1
          fi

      # Step 4: Build and push Docker image
      - name: Push Docker image to Docker Hub
        run: |
          # Log in to Docker Hub using secrets
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          # Build Docker image with a tag that includes branch name and commit SHA
          docker build -t ${{ secrets.DOCKER_USERNAME }}/go-web-app:${{ github.ref_name }}-${{ github.sha }} .
          # Push the newly built image to Docker Hub
          docker push ${{ secrets.DOCKER_USERNAME }}/go-web-app:${{ github.ref_name }}-${{ github.sha }}

      # Step 5: Update Helm chart values with new image tag
      - name: Update Helm values 
        run: |
          # Update the image tag in the Helm chart values file
          sed -i 's|tag:.*|tag: "${{ github.ref_name }}-${{ github.sha }}"|' go-web-app-chart/values.yaml

      # Step 6: Configure Git and commit changes
      - name: Configure Git
        run: |
          git config user.email "seyi.i@blkat.io"
          git config user.name "Beejay625"

      # Step 7: Commit and push changes to the repository
      - name: Push changes
        uses: zakiego/just-git-push@main
        with:
          username: ${{ github.actor }}
          email: ${{ github.actor }}@users.noreply.github.com
          commit-message: "Update Helm chart values with new image tag"
          branch: ${{ github.ref_name }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.ACCESS_TOKEN }}
